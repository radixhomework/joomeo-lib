# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Generate settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          servers: '[{ "id": "ossrh", "username": "${{ secrets.OSSRH_LOGIN }}", "password": "${{ secrets.OSSRH_PASSWORD }}" }]'
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Create test configuration file
        run: |
          mkdir src/test/resources
          echo "joomeo:" >> src/test/resources/application.yml
          echo "  base-url: ${{ secrets.JOOMEO_API_URL }}" >> src/test/resources/application.yml
          echo "  api-key: ${{ secrets.JOOMEO_API_KEY }}" >> src/test/resources/application.yml
          echo "  login: ${{ secrets.JOOMEO_LOGIN }}" >> src/test/resources/application.yml
          echo "  password: ${{ secrets.JOOMEO_PASSWORD }}" >> src/test/resources/application.yml
      - name: Build with Maven
        run: mvn clean deploy org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Remove test configuration file
        run: rm -vf src/test/resources/application.yml
